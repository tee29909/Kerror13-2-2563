// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tbkkData.Models;

namespace tbkkData.Migrations
{
    [DbContext(typeof(tbkkDataContext))]
    partial class tbkkDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("tbkkData.Models.Claim", b =>
                {
                    b.Property<int>("ClaimID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComplainID");

                    b.Property<DateTime>("DateClaim");

                    b.Property<string>("Status");

                    b.HasKey("ClaimID");

                    b.HasIndex("ComplainID");

                    b.ToTable("Claim");
                });

            modelBuilder.Entity("tbkkData.Models.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category");

                    b.Property<string>("CompanyName");

                    b.HasKey("CompanyID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("tbkkData.Models.Complain", b =>
                {
                    b.Property<int>("ComplainID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateComplain");

                    b.Property<int>("OrderID");

                    b.Property<string>("Status");

                    b.HasKey("ComplainID");

                    b.HasIndex("OrderID");

                    b.ToTable("Complain");
                });

            modelBuilder.Entity("tbkkData.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("FirsName");

                    b.Property<string>("LastName");

                    b.Property<string>("Telephone");

                    b.HasKey("CustomerID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("tbkkData.Models.Delivery_performance", b =>
                {
                    b.Property<int>("Delivery_performanceID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Claim_Delivery");

                    b.Property<int>("Complains_Delivery");

                    b.Property<DateTime>("DateDelivery");

                    b.Property<int>("EmployeeID");

                    b.HasKey("Delivery_performanceID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Delivery_performance");
                });

            modelBuilder.Entity("tbkkData.Models.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName");

                    b.Property<string>("Status");

                    b.HasKey("DepartmentID");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("tbkkData.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("Birthday");

                    b.Property<int>("CompanyID");

                    b.Property<DateTime>("Date_of_employment");

                    b.Property<int>("DepartmentID");

                    b.Property<string>("Email");

                    b.Property<int>("EmployeeTypeID");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender");

                    b.Property<string>("Image");

                    b.Property<string>("LastName");

                    b.Property<int>("PositionID");

                    b.Property<double>("Salary");

                    b.Property<string>("Status");

                    b.Property<string>("Telephone");

                    b.HasKey("EmployeeID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("EmployeeTypeID");

                    b.HasIndex("PositionID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("tbkkData.Models.EmployeeType", b =>
                {
                    b.Property<int>("EmployeeTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeTypeName");

                    b.HasKey("EmployeeTypeID");

                    b.ToTable("EmployeeType");
                });

            modelBuilder.Entity("tbkkData.Models.Login", b =>
                {
                    b.Property<int>("LoginID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeID");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("LoginID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("tbkkData.Models.Manufacture", b =>
                {
                    b.Property<int>("ManufactureID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int>("EmployeeID");

                    b.Property<int>("ProductID");

                    b.Property<int>("Quantity");

                    b.HasKey("ManufactureID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("ProductID");

                    b.ToTable("Manufacture");
                });

            modelBuilder.Entity("tbkkData.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID");

                    b.Property<int>("EmployeeID");

                    b.Property<string>("Invoice");

                    b.Property<DateTime>("OrDate");

                    b.Property<DateTime>("ShippedDate");

                    b.Property<string>("Status");

                    b.Property<double>("Total");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("tbkkData.Models.Order_Product", b =>
                {
                    b.Property<int>("Order_ProductID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderID");

                    b.Property<int>("ProductID");

                    b.Property<int>("Qty");

                    b.HasKey("Order_ProductID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("Order_Product");
                });

            modelBuilder.Entity("tbkkData.Models.Partners", b =>
                {
                    b.Property<int>("PartnerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Telephone");

                    b.HasKey("PartnerID");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("tbkkData.Models.Position", b =>
                {
                    b.Property<int>("PositionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PositionName");

                    b.HasKey("PositionID");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("tbkkData.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostPrice");

                    b.Property<string>("Name");

                    b.Property<int>("PartnersID");

                    b.Property<double>("SellingPrice");

                    b.Property<string>("Status");

                    b.HasKey("ProductID");

                    b.HasIndex("PartnersID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("tbkkData.Models.Product_Loss_Reduction", b =>
                {
                    b.Property<int>("Product_Loss_ReductionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<double>("Limits");

                    b.Property<double>("Man_Hr_Per_pc");

                    b.Property<int>("type_productLoossID");

                    b.HasKey("Product_Loss_ReductionID");

                    b.HasIndex("type_productLoossID");

                    b.ToTable("Product_Loss_Reduction");
                });

            modelBuilder.Entity("tbkkData.Models.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cost");

                    b.Property<double>("CostGoal");

                    b.Property<int>("EmployeeID");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Status");

                    b.HasKey("ProjectID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("tbkkData.Models.Project_Product", b =>
                {
                    b.Property<int>("ProjectProductID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductID");

                    b.Property<int>("ProjectID");

                    b.Property<int>("Qty");

                    b.HasKey("ProjectProductID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Project_Product");
                });

            modelBuilder.Entity("tbkkData.Models.Rival", b =>
                {
                    b.Property<int>("RivaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Telephone");

                    b.HasKey("RivaID");

                    b.ToTable("Rival");
                });

            modelBuilder.Entity("tbkkData.Models.Rival_Product", b =>
                {
                    b.Property<int>("RivProductID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Price");

                    b.Property<int>("ProductID");

                    b.Property<DateTime>("RivDate");

                    b.Property<int>("RivalID");

                    b.HasKey("RivProductID");

                    b.HasIndex("ProductID");

                    b.HasIndex("RivalID");

                    b.ToTable("Rival_Product");
                });

            modelBuilder.Entity("tbkkData.Models.Safety", b =>
                {
                    b.Property<int>("SafetyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateIncident");

                    b.Property<int>("Total_Incident");

                    b.Property<int>("incident");

                    b.HasKey("SafetyID");

                    b.ToTable("Safety");
                });

            modelBuilder.Entity("tbkkData.Models.Survey", b =>
                {
                    b.Property<int>("SurveyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameSurvey");

                    b.HasKey("SurveyID");

                    b.ToTable("Survey");
                });

            modelBuilder.Entity("tbkkData.Models.SurveyOperators", b =>
                {
                    b.Property<int>("SurveyOperatorsID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int>("SurveyCount");

                    b.Property<int>("SurveyID");

                    b.Property<int>("Type_SurveyID");

                    b.HasKey("SurveyOperatorsID");

                    b.HasIndex("SurveyID");

                    b.HasIndex("Type_SurveyID");

                    b.ToTable("SurveyOperators");
                });

            modelBuilder.Entity("tbkkData.Models.type_productLooss", b =>
                {
                    b.Property<int>("type_productLoossID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("type_productLoossID");

                    b.ToTable("type_productLooss");
                });

            modelBuilder.Entity("tbkkData.Models.Type_Survey", b =>
                {
                    b.Property<int>("Type_SurveyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeSurvey");

                    b.HasKey("Type_SurveyID");

                    b.ToTable("Type_Survey");
                });

            modelBuilder.Entity("tbkkData.Models.Claim", b =>
                {
                    b.HasOne("tbkkData.Models.Complain", "Complain")
                        .WithMany()
                        .HasForeignKey("ComplainID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tbkkData.Models.Complain", b =>
                {
                    b.HasOne("tbkkData.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tbkkData.Models.Delivery_performance", b =>
                {
                    b.HasOne("tbkkData.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tbkkData.Models.Employee", b =>
                {
                    b.HasOne("tbkkData.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("tbkkData.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("tbkkData.Models.EmployeeType", "EmployeeType")
                        .WithMany()
                        .HasForeignKey("EmployeeTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("tbkkData.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tbkkData.Models.Login", b =>
                {
                    b.HasOne("tbkkData.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tbkkData.Models.Manufacture", b =>
                {
                    b.HasOne("tbkkData.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("tbkkData.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tbkkData.Models.Order", b =>
                {
                    b.HasOne("tbkkData.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("tbkkData.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tbkkData.Models.Order_Product", b =>
                {
                    b.HasOne("tbkkData.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("tbkkData.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tbkkData.Models.Product", b =>
                {
                    b.HasOne("tbkkData.Models.Partners", "Partners")
                        .WithMany()
                        .HasForeignKey("PartnersID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tbkkData.Models.Product_Loss_Reduction", b =>
                {
                    b.HasOne("tbkkData.Models.type_productLooss", "type_productLooss")
                        .WithMany()
                        .HasForeignKey("type_productLoossID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tbkkData.Models.Project", b =>
                {
                    b.HasOne("tbkkData.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tbkkData.Models.Project_Product", b =>
                {
                    b.HasOne("tbkkData.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("tbkkData.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tbkkData.Models.Rival_Product", b =>
                {
                    b.HasOne("tbkkData.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("tbkkData.Models.Rival", "Rival")
                        .WithMany()
                        .HasForeignKey("RivalID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tbkkData.Models.SurveyOperators", b =>
                {
                    b.HasOne("tbkkData.Models.Survey", "Survey")
                        .WithMany()
                        .HasForeignKey("SurveyID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("tbkkData.Models.Type_Survey", "Type_Survey")
                        .WithMany()
                        .HasForeignKey("Type_SurveyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
